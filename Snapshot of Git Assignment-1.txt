abhis@DESKTOP-MPRLD9G MINGW64 ~
$ cd F:/Git-Training

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training
$ git init
Initialized empty Git repository in F:/Git-Training/.git/

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (master)
$ git branch -m master main

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ vi fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git status
On branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        fc.txt

nothing added to commit but untracked files present (use "git add" to track)

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git commit -m "Add New File fc.txt"
On branch main

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        fc.txt

nothing added to commit but untracked files present (use "git add" to track)

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git add .
warning: in the working copy of 'fc.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git commit -m "Add New File fc.txt"
[main (root-commit) acb6bbd] Add New File fc.txt
 1 file changed, 1 insertion(+)
 create mode 100644 fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git checkout -b feature1
Switched to a new branch 'feature1'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ vi feature1-file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git status
On branch feature1
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        feature1-file.txt

nothing added to commit but untracked files present (use "git add" to track)

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git add .
warning: in the working copy of 'feature1-file.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git commit -m "Add New File feature1-file.txt"
[feature1 49983df] Add New File feature1-file.txt
 1 file changed, 1 insertion(+)
 create mode 100644 feature1-file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git remote add origin https://github.com/Abhishek-Jain-1925/Git-Training.git

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git push origin main
To https://github.com/Abhishek-Jain-1925/Git-Training.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/Abhishek-Jain-1925/Git-Training.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git checkout main
Switched to branch 'main'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git push origin main
To https://github.com/Abhishek-Jain-1925/Git-Training.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/Abhishek-Jain-1925/Git-Training.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git pull origin main
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 613 bytes | 5.00 KiB/s, done.
From https://github.com/Abhishek-Jain-1925/Git-Training
 * branch            main       -> FETCH_HEAD
 * [new branch]      main       -> origin/main
fatal: refusing to merge unrelated histories

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git push origin main
To https://github.com/Abhishek-Jain-1925/Git-Training.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/Abhishek-Jain-1925/Git-Training.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. If you want to integrate the remote changes,
hint: use 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git checkout feature1
Switched to branch 'feature1'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git pull origin feature1
fatal: couldn't find remote ref feature1

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git push origin feature1
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (6/6), 585 bytes | 585.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'feature1' on GitHub by visiting:
remote:      https://github.com/Abhishek-Jain-1925/Git-Training/pull/new/feature1
remote:
To https://github.com/Abhishek-Jain-1925/Git-Training.git
 * [new branch]      feature1 -> feature1

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git checkout main
Switched to branch 'main'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git push origin main
To https://github.com/Abhishek-Jain-1925/Git-Training.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/Abhishek-Jain-1925/Git-Training.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. If you want to integrate the remote changes,
hint: use 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git pull origin main
From https://github.com/Abhishek-Jain-1925/Git-Training
 * branch            main       -> FETCH_HEAD
fatal: refusing to merge unrelated histories

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git branch
  feature1
* main

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ vi fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git add .
warning: in the working copy of 'fc.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git commit -m "Update file fc.txt"
[main 04edef3] Update file fc.txt
 1 file changed, 1 insertion(+)

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git checkout -b feature2
Switched to a new branch 'feature2'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ vi feature2-file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git add .
warning: in the working copy of 'feature2-file.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git commit -m "Add New File feature2-file.txt"
[feature2 38801f1] Add New File feature2-file.txt
 1 file changed, 1 insertion(+)
 create mode 100644 feature2-file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git push origin feature2
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 640 bytes | 320.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'feature2' on GitHub by visiting:
remote:      https://github.com/Abhishek-Jain-1925/Git-Training/pull/new/feature2
remote:
To https://github.com/Abhishek-Jain-1925/Git-Training.git
 * [new branch]      feature2 -> feature2

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ vi feature2-file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ vi feature2-file1.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git add .
warning: in the working copy of 'feature2-file.txt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'feature2-file1.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git commit -m "Add New File feature2-file1.txt"
[feature2 b1b940a] Add New File feature2-file1.txt
 1 file changed, 1 insertion(+)
 create mode 100644 feature2-file1.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git push origin feature2
fatal: unable to access 'https://github.com/Abhishek-Jain-1925/Git-Training.git/': Could not resolve host: github.com

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git push origin feature2
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 383 bytes | 383.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Abhishek-Jain-1925/Git-Training.git
   38801f1..b1b940a  feature2 -> feature2

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature2)
$ git checkout main
Switched to branch 'main'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ vi demo.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git status
On branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        demo.txt

nothing added to commit but untracked files present (use "git add" to track)

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git add .
warning: in the working copy of 'demo.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git commit -m "Add New demo file"
[main 86e36d9] Add New demo file
 1 file changed, 1 insertion(+)
 create mode 100644 demo.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git log
commit 86e36d9b56ebd8e858e13a3da3aa2c7aca1544d7 (HEAD -> main)
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 19:08:34 2024 +0530

    Add New demo file

commit 04edef38bde3889d56c008080b79ac74dbb3a3c4
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:45:42 2024 +0530

    Update file fc.txt

commit acb6bbd7ea0439991884eeb515711887d4120d73
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:34:33 2024 +0530

    Add New File fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git reset --soft HEAD~1

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git log
commit 04edef38bde3889d56c008080b79ac74dbb3a3c4 (HEAD -> main)
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:45:42 2024 +0530

    Update file fc.txt

commit acb6bbd7ea0439991884eeb515711887d4120d73
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:34:33 2024 +0530

    Add New File fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git add .

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git commit -m "Add New demo file"
[main 0687151] Add New demo file
 1 file changed, 1 insertion(+)
 create mode 100644 demo.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git log
commit 068715165de694c6d81a03a2979bdfd32e4d0229 (HEAD -> main)
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 19:11:24 2024 +0530

    Add New demo file

commit 04edef38bde3889d56c008080b79ac74dbb3a3c4
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:45:42 2024 +0530

    Update file fc.txt

commit acb6bbd7ea0439991884eeb515711887d4120d73
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:34:33 2024 +0530

    Add New File fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git reset --hard HEAD~1
HEAD is now at 04edef3 Update file fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git diff feature1
diff --git a/fc.txt b/fc.txt
index 0d1dcaf..d9ff0f1 100644
--- a/fc.txt
+++ b/fc.txt
@@ -1 +1,2 @@
 Hello World !! Welcome to Fergusson College !!
+This is the Most Beautiful College in MH.
diff --git a/feature1-file.txt b/feature1-file.txt
deleted file mode 100644
index 3073ad2..0000000
--- a/feature1-file.txt
+++ /dev/null
@@ -1 +0,0 @@
-Hello !! This is the Demo File From Feature1

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git checkout feature1
Switched to branch 'feature1'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ vi file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git log
commit 49983dff337b29572f4d777134d3a051bd1f3f26 (HEAD -> feature1, origin/feature1)
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:36:44 2024 +0530

    Add New File feature1-file.txt

commit acb6bbd7ea0439991884eeb515711887d4120d73
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Sun Jan 14 18:34:33 2024 +0530

    Add New File fc.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git add .
warning: in the working copy of 'file.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git status
On branch feature1
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   file.txt


abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git stash
Saved working directory and index state WIP on feature1: 49983df Add New File feature1-file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git stash list
stash@{0}: WIP on feature1: 49983df Add New File feature1-file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git stash pop
On branch feature1
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   file.txt

Dropped refs/stash@{0} (12d34e00af4aa5246ead98b0bbc518510b804c85)

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git add .

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git status
On branch feature1
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   file.txt


abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git commit -m "Add New demo file"
[feature1 b53d3d8] Add New demo file
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git push origin feature1
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 337 bytes | 337.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Abhishek-Jain-1925/Git-Training.git
   49983df..b53d3d8  feature1 -> feature1

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (feature1)
$ git checkout main
Switched to branch 'main'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git branch
  feature1
  feature2
* main

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git branch -d feature2
error: the branch 'feature2' is not fully merged.
If you are sure you want to delete it, run 'git branch -D feature2'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git branch -D feature2
Deleted branch feature2 (was b1b940a).

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git-Training (main)
$ git branch
  feature1
* main